//
//  SitlyApp.swift
//  Sitly
//
//  Created by Maxim Gotovchenko on 24.06.2025.
//

import SwiftUI
import Firebase

@main
struct SitlyApp: App {
    @StateObject private var appState = AppState(
        userUseCase: DependencyContainer.shared.userUseCase,
        storageService: DependencyContainer.shared.storageService
    )
    
    init() {
        print("üöÄ SitlyApp: –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø")
        FirebaseApp.configure()
        print("üî• Firebase: –ù–ê–°–¢–†–û–ï–ù")
    }
    
    var body: some Scene {
        WindowGroup {
            Group {
                if appState.isAuthenticated {
                    if let user = appState.currentUser {
                        switch user.role {
                        case .client:
                            ClientMainView()
                                .environmentObject(appState)
                        case .restaurant:
                            ModernRestaurantMainView()
                                .environmentObject(appState)
                        }
                    } else {
                        LoadingView()
                    }
                } else {
                    WelcomeView()
                        .environmentObject(appState)
                }
            }
            .preferredColorScheme(.dark)
        }
    }
}

// MARK: - Client Main View
struct ClientMainView: View {
    @EnvironmentObject var appState: AppState
    @State private var selectedTab = 0
    
    var body: some View {
        TabView(selection: $selectedTab) {
            // –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
            RestaurantListView()
                .tabItem {
                    Image(systemName: "house.fill")
                    Text("–ì–ª–∞–≤–Ω–∞—è")
                }
                .tag(0)
            
            // –ü–æ–∏—Å–∫
            Text("–ü–æ–∏—Å–∫")
                .tabItem {
                    Image(systemName: "magnifyingglass")
                    Text("–ü–æ–∏—Å–∫")
                }
                .tag(1)
            
            // –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
            BookingHistoryView()
                .tabItem {
                    Image(systemName: "calendar")
                    Text("–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")
                }
                .tag(2)
            
            // –ü—Ä–æ—Ñ–∏–ª—å
            ProfileView()
                .tabItem {
                    Image(systemName: "person.fill")
                    Text("–ü—Ä–æ—Ñ–∏–ª—å")
                }
                .tag(3)
        }
        .accentColor(.orange)
    }
}

// MARK: - Restaurant Main View
struct RestaurantMainView: View {
    @EnvironmentObject var appState: AppState
    @State private var selectedTab = 0
    
    var body: some View {
        TabView(selection: $selectedTab) {
            // –î–∞—à–±–æ—Ä–¥
            RestaurantDashboardView()
                .tabItem {
                    Image(systemName: "chart.bar.fill")
                    Text("–î–∞—à–±–æ—Ä–¥")
                }
                .tag(0)
            
            // –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
            Text("–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")
                .tabItem {
                    Image(systemName: "calendar.badge.plus")
                    Text("–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")
                }
                .tag(1)
            
            // –ú–µ–Ω—é
            Text("–ú–µ–Ω—é")
                .tabItem {
                    Image(systemName: "list.bullet")
                    Text("–ú–µ–Ω—é")
                }
                .tag(2)
            
            // AI-–ø–æ–º–æ—â–Ω–∏–∫
            AIAssistantView()
                .tabItem {
                    Image(systemName: "brain.head.profile")
                    Text("AI-–ø–æ–º–æ—â–Ω–∏–∫")
                }
                .tag(3)
            
            // –ü—Ä–æ—Ñ–∏–ª—å
            Text("–ü—Ä–æ—Ñ–∏–ª—å")
                .tabItem {
                    Image(systemName: "building.2.fill")
                    Text("–ü—Ä–æ—Ñ–∏–ª—å")
                }
                .tag(4)
        }
        .accentColor(.purple)
    }
}

// MARK: - Admin Main View
struct AdminMainView: View {
    @EnvironmentObject var appState: AppState
    @State private var selectedTab = 0
    
    var body: some View {
        TabView(selection: $selectedTab) {
            // –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
            AdminDashboardView()
                .tabItem {
                    Image(systemName: "shield.fill")
                    Text("–î–∞—à–±–æ—Ä–¥")
                }
                .tag(0)
            
            // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏
            RestaurantManagementView()
                .tabItem {
                    Image(systemName: "building.2.fill")
                    Text("–†–µ—Å—Ç–æ—Ä–∞–Ω—ã")
                }
                .tag(1)
            
            // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
            UserManagementView()
                .tabItem {
                    Image(systemName: "person.3.fill")
                    Text("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")
                }
                .tag(2)
            
            // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
            AdminAnalyticsView()
                .tabItem {
                    Image(systemName: "chart.line.uptrend.xyaxis")
                    Text("–ê–Ω–∞–ª–∏—Ç–∏–∫–∞")
                }
                .tag(3)
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∏
            AdminSettingsView()
                .tabItem {
                    Image(systemName: "gearshape.fill")
                    Text("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
                }
                .tag(4)
        }
        .accentColor(.red)
    }
}

// MARK: - Loading View
struct LoadingView: View {
    @State private var isAnimating = false
    
    var body: some View {
        ZStack {
            // –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Ñ–æ–Ω
            LinearGradient(
                colors: [
                    Color(red: 0.05, green: 0.05, blue: 0.1),
                    Color(red: 0.1, green: 0.1, blue: 0.2),
                    Color(red: 0.15, green: 0.15, blue: 0.25)
                ],
                startPoint: .topLeading,
                endPoint: .bottomTrailing
            )
            .ignoresSafeArea()
            
            VStack(spacing: 30) {
                // –õ–æ–≥–æ—Ç–∏–ø —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
                ZStack {
                    Circle()
                        .fill(
                            LinearGradient(
                                colors: [.blue, .purple, .green],
                                startPoint: .topLeading,
                                endPoint: .bottomTrailing
                            )
                        )
                        .frame(width: 120, height: 120)
                        .scaleEffect(isAnimating ? 1.1 : 1.0)
                        .animation(
                            .easeInOut(duration: 2.0)
                            .repeatForever(autoreverses: true),
                            value: isAnimating
                        )
                    
                    Image(systemName: "fork.knife")
                        .font(.system(size: 50))
                        .foregroundColor(.white)
                }
                
                // –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                Text("Sitly")
                    .font(.largeTitle)
                    .fontWeight(.bold)
                    .foregroundColor(.white)
                
                // –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
                Text("–í–∞—à –∏–¥–µ–∞–ª—å–Ω—ã–π —Å—Ç–æ–ª–∏–∫")
                    .font(.title3)
                    .foregroundColor(.white.opacity(0.8))
                
                // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
                ProgressView()
                    .progressViewStyle(CircularProgressViewStyle(tint: .white))
                    .scaleEffect(1.5)
                
                // –°—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏
                Text("–ó–∞–≥—Ä—É–∂–∞–µ–º...")
                    .font(.body)
                    .foregroundColor(.white.opacity(0.7))
            }
        }
        .onAppear {
            isAnimating = true
        }
    }
}


// MARK: - Preview
#Preview {
    let userUseCase = UserUseCase(repository: UserRepository(networkService: NetworkService(), storageService: StorageService()), storageService: StorageService())
    let storageService = StorageService()
    
    Text("Sitly App Preview")
        .environmentObject(AppState(userUseCase: userUseCase, storageService: storageService))
}

