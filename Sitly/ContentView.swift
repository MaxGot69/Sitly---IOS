import SwiftUI

struct ContentView: View {
    @State private var showLogo = false
    @State private var showText = false
    @State private var showButton = false

    var body: some View {
        NavigationStack {
            ZStack {
                LinearGradient(
                    colors: [.black, .gray.opacity(0.6)],
                    startPoint: .top,
                    endPoint: .bottom
                )
                .ignoresSafeArea()

                VStack(spacing: 20) {
                    // –õ–û–ì–û–¢–ò–ü
                    Image(systemName: "fork.knife.circle.fill")
                        .resizable()
                        .scaledToFit()
                        .frame(width: 80, height: 80)
                        .foregroundColor(.white)
                        .padding(.top, 40)
                        .scaleEffect(showLogo ? 1 : 0.5)
                        .opacity(showLogo ? 1 : 0)
                        .animation(.easeOut(duration: 0.5), value: showLogo)

                    // –ü–†–ò–í–ï–¢–°–¢–í–ò–ï
                    Text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Sitly")
                        .font(.title)
                        .fontWeight(.bold)
                        .foregroundColor(.white)
                        .opacity(showText ? 1 : 0)
                        .animation(.easeOut(duration: 0.5).delay(0.2), value: showText)

                    // –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
                    Text("–ì–¥–µ –≤–∞—à —Å—Ç–æ–ª–∏–∫ —É–∂–µ –∂–¥—ë—Ç –≤–∞—Å!")
                        .font(.subheadline)
                        .foregroundColor(.gray)
                        .opacity(showText ? 1 : 0)
                        .animation(.easeOut(duration: 0.5).delay(0.3), value: showText)
                    
                    


                    Spacer().frame(height: 10)

                    // –ö–ù–û–ü–ö–ê –ù–ê–í–ò–ì–ê–¶–ò–ò
                    NavigationLink("–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º", destination: RestaurantListView())
                        .padding()
                        .frame(maxWidth: .infinity)
                        .background(Color.blue)
                        .foregroundColor(.white)
                        .cornerRadius(10)
                        .padding(.horizontal)
                        .opacity(showButton ? 1 : 0)
                        .animation(.easeOut(duration: 0.5).delay(0.4), value: showButton)

                    // –ü–æ–¥–ø–∏—Å—å –ø–æ–¥ –∫–Ω–æ–ø–∫–æ–π
                    Text("–û—Ç–∫—Ä–æ–π –ª—É—á—à–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã —Ä—è–¥–æ–º üçΩÔ∏è")
                        .font(.caption)
                        .foregroundColor(.gray)
                        .padding(.bottom, 10)
                        .opacity(showButton ? 1 : 0)
                        .animation(.easeOut(duration: 0.5).delay(0.5), value: showButton)

                    // –ö–ù–û–ü–ö–ê –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò
                    Button(action: {
                        // –ü–æ–∫–∞ –Ω–∏—á–µ–≥–æ, –ø–æ–∑–∂–µ —Å–¥–µ–ª–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥
                    }) {
                        Text("–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è")
                            .font(.caption)
                            .foregroundColor(.gray)
                            .underline()
                    }
                    .opacity(showButton ? 1 : 0)
                    .animation(.easeOut(duration: 0.5).delay(0.6), value: showButton)
                }
                .padding()
            }
            .onAppear {
                showLogo = true
                showText = true
                showButton = true
            }
            .preferredColorScheme(.dark)
        }
    }
}

#Preview {
    ContentView()
}
